import{_ as o,r as n,o as r,c as d,b as e,d as t,e as a,a as p}from"./app.02a9e6a4.js";const i={},c=e("h1",{id:"port-management",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#port-management","aria-hidden":"true"},"#"),a(" Port Management")],-1),l={href:"https://devcenter.heroku.com/articles/runtime-principles#web-servers",target:"_blank",rel:"noopener noreferrer"},h=a("Like Heroku"),u=a(", Miasma will automatically manage ports for you. But unlike Heroku, you can override the app's "),m=e("strong",null,"target",-1),b=a(" and "),g=e("strong",null,"published",-1),_=a(" ports."),f={class:"custom-container details"},v=e("summary",null,"About Docker Ports",-1),k=e("p",null,"Docker (and thus Miasma) has two types of ports:",-1),x=e("ol",null,[e("li",null,[e("strong",null,"Target"),a(": the port inside the container")]),e("li",null,[e("strong",null,"Published"),a(": the publicly exposed port you would use to interact with the app")])],-1),y=a("For more info, see Docker's "),w={href:"https://docs.docker.com/compose/compose-file/compose-file-v3/#ports",target:"_blank",rel:"noopener noreferrer"},P=a("official documentation"),T=p(`<p>By default, a random target port will be selected and provided to the app via the <code>PORT</code> environment variable. The app should respect this environment variable, and run on the provided port.</p><h2 id="published-ports" tabindex="-1"><a class="header-anchor" href="#published-ports" aria-hidden="true">#</a> Published Ports</h2><p>Usually you don&#39;t need to set the published port of an application unless you want to, or the image requires it.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Add a port</span>
miasma apps:edit -a postgres --add-published-ports <span class="token number">5432</span>

<span class="token comment"># Go back to a randomized port</span>
miasma apps:edit -a postgres --rm-published-ports <span class="token number">5432</span>
</code></pre></div><h2 id="target-ports" tabindex="-1"><a class="header-anchor" href="#target-ports" aria-hidden="true">#</a> Target Ports</h2><p>Sometimes it&#39;s difficult to configure a docker image to respect the <code>$PORT</code> environment variable. If you can&#39;t change which port the application runs on, or it&#39;s difficult to do, you can just tell the app to target a specific port instead:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Add a port</span>
miasma apps:edit -a example-website --add-target-ports <span class="token number">80</span>

<span class="token comment"># Go back to a randomized port</span>
miasma apps:edit -a postgres --rm-target-ports <span class="token number">80</span>
</code></pre></div><h2 id="expose-multiple-ports" tabindex="-1"><a class="header-anchor" href="#expose-multiple-ports" aria-hidden="true">#</a> Expose Multiple Ports</h2><p>If your image uses multiple ports, and you want to be able to access both of them, you can just add multiple published ports. Behind the scenes, multiple target ports will be randomly generated for the container, and provided to the app via the <code>PORT_1</code> (same as <code>PORT</code>), <code>PORT_2</code>, <code>PORT_3</code>, etc environment variables.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>miasma apps:edit -a example --add-published-ports <span class="token number">8081</span> --add-published-ports <span class="token number">8082</span>
</code></pre></div><p>To use hard coded target ports, you can also set those:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>miasma apps:edit -a example --add-published-ports <span class="token number">8081</span> --add-published-ports <span class="token number">8082</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">Order Matters</p><p>In the example above, 8081 was added before 8082 in both cases, so the ports end up connected like <code>8081:8081</code> and <code>8082:8082</code>.</p><p>If we had instead ran:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>miasma apps:edit -a example --add-published-ports <span class="token number">8082</span> --add-published-ports <span class="token number">8081</span>
</code></pre></div><p>We would end up with <code>8081:8082</code> and <code>8082:8081</code> instead.</p></div>`,13);function O(B,I){const s=n("ExternalLinkIcon");return r(),d("div",null,[c,e("p",null,[e("a",l,[h,t(s)]),u,m,b,g,_]),e("details",f,[v,k,x,e("p",null,[y,e("a",w,[P,t(s)])])]),T])}var R=o(i,[["render",O],["__file","port-management.html.vue"]]);export{R as default};

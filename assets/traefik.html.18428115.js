import{_ as s,r as i,o as r,c as l,b as e,d as a,e as t,a as n}from"./app.02a9e6a4.js";const d={},c=e("h1",{id:"traefik-plugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traefik-plugin","aria-hidden":"true"},"#"),t(" Traefik Plugin")],-1),h={href:"https://traefik.io",target:"_blank",rel:"noopener noreferrer"},p=t("Traefik"),u=t(' (pronounced "traffic") is a modern ingress router used to define hostname and path routing. To get started, add the plugin via the CLI:'),m=n(`<div class="language-bash ext-sh"><pre class="language-bash"><code>$ miasma plugins:enable TRAEFIK

Enabling TRAEFIK<span class="token punctuation">..</span>.
Done<span class="token operator">!</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br></div></div><p>You can view Traefik&#39;s dashboard at <code>http://&lt;server-ip&gt;:8080/dashboard/</code> in a browser.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The Traefik plugin is configured run on the Manager Node (placement of <code>node.role == manager</code>).</p></div><h2 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage" aria-hidden="true">#</a> Example Usage</h2><p>Let&#39;s say you want to host 4 apps on the <code>home.io</code> domain in the following locations:</p>`,5),g=e("thead",null,[e("tr",null,[e("th",null,"App Name"),e("th",null,"Hosted At")])],-1),f=e("td",null,[e("code",null,"web-1")],-1),_={href:"http://home.io",target:"_blank",rel:"noopener noreferrer"},b=t("http://home.io"),k=e("td",null,[e("code",null,"api-1")],-1),w={href:"http://api1.home.io",target:"_blank",rel:"noopener noreferrer"},v=t("http://api1.home.io"),T=e("td",null,[e("code",null,"web-2")],-1),y={href:"http://web2.home.io",target:"_blank",rel:"noopener noreferrer"},x=t("http://web2.home.io"),I=e("td",null,[e("code",null,"api-2")],-1),q={href:"http://web2.home.io/api",target:"_blank",rel:"noopener noreferrer"},P=t("http://web2.home.io/api"),E=n(`<p>As you can see, we&#39;re going to be able to map to the apex domain, subdomains, and even paths.</p><h3 id="dns-records" tabindex="-1"><a class="header-anchor" href="#dns-records" aria-hidden="true">#</a> DNS Records</h3><p>You&#39;ll need to setup some A records to get started.</p><ul><li><code>api1.home.io</code> \u2192 <code>192.168.1.0</code></li><li><code>home.io</code> \u2192 <code>192.168.1.0</code></li><li><code>web2.home.io</code> \u2192 <code>192.168.1.0</code></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>For local networks, some routers include the ability to map hostnames to local IP address.</p></div><h3 id="setting-up-the-routes" tabindex="-1"><a class="header-anchor" href="#setting-up-the-routes" aria-hidden="true">#</a> Setting Up the Routes</h3><p>From here on, it&#39;s easy to setup the routes for our 4 apps using the Misama CLI.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>miasma traefik:set -a web-1 --host home.io
miasma traefik:set -a api-1 --host api1.home.io
miasma traefik:set -a web-2 --host web2.home.io
miasma traefik:set -a api-2 --host web2.home.io --path /api
</code></pre></div><p>And the routes are setup! Give it a minute, and watch the HTTP Routers on the Traefik dashboard (<code>http://&lt;server-ip&gt;:8080/dashboard/#/http/routers</code>) to see when they&#39;ve been registered.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>After adding or updating routes, Traefik will automatically discover them. This process can take up to 2 minutes, so don&#39;t restart the apps wondering why their routes aren&#39;t working.</p></div><h2 id="https-tls-support" tabindex="-1"><a class="header-anchor" href="#https-tls-support" aria-hidden="true">#</a> HTTPS &amp; TLS Support</h2><p>If you&#39;re using Miasma with public IP addresses that can be accessed from the internet like any other web app, you&#39;ll want to make sure your apps use HTTPS.</p>`,12),S=t("The Traefik plugin can be configured to use HTTPS. Behind the scenes, Traefik is managing and auto-renewing certificates via "),A={href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"},H=t("LetsEncrypt"),N=t("."),L=n(`<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Make the directory where you&#39;re certs will be stored</span>
<span class="token function">mkdir</span> /root/letsencrypt

<span class="token comment"># Enable the plugin with required config</span>
miasma plugins:enable TRAEFIK --plugin-config <span class="token string">&#39;{
    &quot;enableHttps&quot;: true,
    &quot;certsEmail&quot;: &quot;&lt;your-email&gt;&quot;,
    &quot;certsDir&quot;: &quot;/root/letsencrypt&quot;
}&#39;</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you&#39;ve already enabled the plugin, disable it first and re-enable it with the additional config.</p></div><p>All three fields are required to enable HTTPS.</p><ul><li><code>enableHttps</code> - Self explanitory. Set to <code>true</code> to enable HTTPS</li><li><code>certsEmail</code> (required when <code>enableHttps=true</code>) - The email you&#39;d like to use for the LetsEncrypt certificates</li><li><code>certsDir</code> (required when <code>enableHttps=true</code>) - The path on your manager node to where you want to store certificates. It must exist and be an absolute path</li></ul><p>You don&#39;t have to specify any domains. Certs are generated automatically for all domains configured on running apps.</p><p>And that&#39;s it!</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Self managed certs are not supported at this time. Feel free to open a PR!</p></div>`,7);function R(F,B){const o=i("ExternalLinkIcon");return r(),l("div",null,[c,e("p",null,[e("a",h,[p,a(o)]),u]),m,e("table",null,[g,e("tbody",null,[e("tr",null,[f,e("td",null,[e("a",_,[b,a(o)])])]),e("tr",null,[k,e("td",null,[e("a",w,[v,a(o)])])]),e("tr",null,[T,e("td",null,[e("a",y,[x,a(o)])])]),e("tr",null,[I,e("td",null,[e("a",q,[P,a(o)])])])])]),E,e("p",null,[S,e("a",A,[H,a(o)]),N]),L])}var D=s(d,[["render",R],["__file","traefik.html.vue"]]);export{D as default};
